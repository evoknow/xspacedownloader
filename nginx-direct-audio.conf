# SIMPLE SOLUTION: Let Nginx serve audio files directly
# Add this to your existing xspacedownload.com.conf

server {
    server_name xspacedownload.com;
    
    # ... keep all your existing configuration ...
    
    # ADD THIS NEW LOCATION for direct audio serving
    location ^~ /audio/ {
        alias /var/www/production/xspacedownload.com/website/htdocs/downloads/;
        
        # Perfect for media streaming - no proxy, no HTTP/2 issues
        sendfile on;
        tcp_nopush on;
        tcp_nodelay on;
        gzip off;
        
        # Enable range requests (crucial for seeking)
        add_header Accept-Ranges bytes always;
        
        # Set correct MIME types
        location ~* \.mp3$ { 
            add_header Content-Type audio/mpeg always;
            add_header Accept-Ranges bytes always;
        }
        location ~* \.m4a$ { 
            add_header Content-Type audio/mp4 always; 
            add_header Accept-Ranges bytes always;
        }
        location ~* \.wav$ { 
            add_header Content-Type audio/wav always;
            add_header Accept-Ranges bytes always;
        }
        location ~* \.mp4$ { 
            add_header Content-Type video/mp4 always;
            add_header Accept-Ranges bytes always;
        }
        
        # Cache for better performance
        expires 1h;
        add_header Cache-Control "public, max-age=3600" always;
        
        # CORS if needed
        add_header Access-Control-Allow-Origin "*" always;
        add_header Access-Control-Allow-Methods "GET, HEAD, OPTIONS" always;
        add_header Access-Control-Allow-Headers "Range" always;
        
        # Security
        add_header X-Content-Type-Options nosniff always;
    }
    
    # KEEP your existing /download/ location for authentication/downloads
    location ^~ /download/ {
        # ... your existing configuration ...
    }
    
    # ... rest of your configuration ...
}